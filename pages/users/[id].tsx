import { useRouter } from "next/router";
import styles from "../../styles/Users.module.css";
import HomeIndexPage from '../../components/home';
import Head from 'next/head';
import {
  Box,
  Center,
  Text,
  Stack,
  List,
  ListItem,
  ListIcon,
  Button,
  useColorModeValue,
} from '@chakra-ui/react';
import { CheckIcon } from '@chakra-ui/icons';


interface User{
  id : number;
  name : string;
  email : string;
  website : string;
  phone : string;
  city : string;
}

interface UserDetailProps {
  user : User;
}

export default function UserDetail(props : UserDetailProps) {

  const {user} = props; 
  return (
    <>
    <Center py={6}>
        <Box
          maxW={'330px'}
          w={'full'}
          bg={useColorModeValue('white', 'gray.800')}
          boxShadow={'2xl'}
          rounded={'md'}
          overflow={'hidden'}>
          <Stack
            textAlign={'center'}
            p={6}
            color={useColorModeValue('gray.800', 'white')}
            align={'center'}>
            <Text
              fontSize={'sm'}
              fontWeight={500}
              bg={useColorModeValue('green.50', 'green.900')}
              p={2}
              px={3}
              color={'green.500'}
              rounded={'full'}>
              <p>{user.id}</p>
            </Text>
            <Stack direction={'row'} align={'center'} justify={'center'}>
              <Text fontSize={'6xl'} fontWeight={800}>
              {/* <p>{user.city}</p> */}
              </Text>
            </Stack>
          </Stack>
  
          <Box bg={useColorModeValue('gray.50', 'gray.900')} px={6} py={10}>
            <List spacing={3}>
              <ListItem>
                <ListIcon as={CheckIcon} color="green.400" />
                <p>{user.name}</p>
              </ListItem>
              <ListItem>
                <ListIcon as={CheckIcon} color="green.400" />
                <p>{user.email}</p>
              </ListItem>
              <ListItem>
                <ListIcon as={CheckIcon} color="green.400" />
                <p>{user.phone}</p>
              </ListItem>
              <ListItem>
                <ListIcon as={CheckIcon} color="green.400" />
                <p>{user.website}</p>
              </ListItem>
            </List>
  
            {/* <Button
              mt={10}
              w={'full'}
              bg={'green.400'}
              color={'white'}
              rounded={'xl'}
              boxShadow={'0 5px 20px 0px rgb(72 187 120 / 43%)'}
              _hover={{
                bg: 'green.500',
              }}
              _focus={{
                bg: 'green.500',
              }}>
              Back
            </Button> */}
          </Box>
        </Box>
      </Center>

    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
      {/* <Navbar/> */}
      {/* <HomeIndexPage/> */}
    <div>
        {/* <p>{user.name}</p>
        <p>{user.email}</p>
        <p>{user.phone}</p>
        <p>{user.website}</p> */}
    </div>
      </main>
    </div>

    </>
  )
}

export const getStaticPaths = async () => {
  const res = await fetch("https://jsonplaceholder.typicode.com/users");
  const dataUsers = await res.json();

  const paths = dataUsers.map((user:User) => ({
    params : {
      id : user.id.toString(),
    },

  }));
  return {
    paths,
    fallback: false, 
  }
}

interface GetStaticProps {
  params : {
    id : string;
  }
}

export async function getStaticProps(context : GetStaticProps) {
  const {id} = context.params;
  const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);
  const user = await res.json();

 
  return {
    props : {
      user,
    },
  };
}